// Generated by LiveScript 1.3.1
var yauzl, parse, Flash, Document;
yauzl = require('yauzl');
parse = require('xamel').parse;
Flash = require('./dom/Flash');
Document = require('./dom/Document');
module.exports = function(){
  var fl;
  fl = new Flash;
  return {
    fl: fl,
    open: function(file, callback){
      return yauzl.open(file, function(err, zip){
        var that;
        if (that = err) {
          return typeof callback == 'function' ? callback(that) : void 8;
        }
        return zip.on('entry', function(entry){
          if (entry.fileName !== 'DOMDocument.xml') {
            return;
          }
          return zip.openReadStream(entry, function(err, stream){
            var that, xml;
            if (that = err) {
              return typeof callback == 'function' ? callback(that) : void 8;
            }
            xml = '';
            stream.on('data', function(it){
              return xml += it;
            });
            return stream.on('end', function(){
              return parse(xml, {
                cdata: true
              }, function(err, xml){
                var that;
                if (that = err) {
                  return typeof callback == 'function' ? callback(that) : void 8;
                }
                fl.documents = fl.documents.concat(new Document(file, xml.children[0]));
                return typeof callback == 'function' ? callback(null, fl.openDocument(file)) : void 8;
              });
            });
          });
        });
      });
    }
  };
};